{"version":3,"sources":["../../src/components/input.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM;;;;;;;;;;;;;;qNA2BF,gBAAgB,UAAC,CAAD,EAAO;AACnB,cAAE,cAAF,GADmB;;gBAGX,WAAa,MAAK,KAAL,CAAb,SAHW;;AAInB,gBAAM,QAAQ,EAAE,MAAF,CAAS,KAAT,CAJK;AAKnB,gBAAM,WAAW,sBAAO,KAAP,CAAX,CALa;AAMnB,gBAAI,SAAS,OAAT,EAAJ,EAAwB;AACpB,yBAAS,QAAT,EADoB;aAAxB;SANY;;;iBA3Bd;;6CAeoB;yBAId,KAAK,KAAL,CAJc;gBAEd,iCAFc;gBAGd,mBAHc;;AAKlB,gBAAM,QAAQ,2BAAY,KAAK,IAAL,CAAU,KAAV,CAApB,CALY;;AAOlB,gBAAI,QAAQ,WAAR,IAAuB,KAAvB,EAA8B;AAC9B,sBAAM,KAAN,GAD8B;aAAlC;;;;iCAgBM;0BAQF,KAAK,KAAL,CARE;gBAEF,wBAFE;gBAGF,sBAHE;gBAIF,gCAJE;gBAKF,oBALE;gBAMF,0BANE;gBAOF,sBAPE;;;AAUN,gBAAM,UAAU,0BACZ,aADY,EAEZ,MAFY,uCAIQ,QAAY,OAJpB,CAAV,CAVA;;AAkBN,gBAAM,cAAc,6BAAqB,MAAM,IAAN,GAAa,MAAM,IAAN,CAlBhD;;AAoBN,mBACI;;kBAAK,WAAY,OAAZ,EAAL;gBACI,kDAAO,WAAU,cAAV;AACA,0BAAK,MAAL;AACA,yBAAI,OAAJ;AACA,2BAAQ,KAAR;AACA,8BAAW,KAAK,aAAL;mBACN,WALZ,CADJ;gBAQI;;sBAAM,WAAU,mBAAV;AACA,iCAAU,OAAV,EADN;oBAEI,wCAAM,WAAY,WAAZ,EAAN,CAFJ;iBARJ;aADJ,CApBM;;;;WAtCR;;;oBAEK,YAAY;AACf,YAAc,gBAAM,SAAN,CAAgB,MAAhB;AACd,iBAAc,gBAAM,SAAN,CAAgB,IAAhB;AACd,UAAc,gBAAM,SAAN,CAAgB,IAAhB;AACd,WAAc,gBAAM,SAAN,CAAgB,MAAhB;AACd,gBAAc,gBAAM,SAAN,CAAgB,MAAhB;AACd,UAAc,gBAAM,SAAN,CAAgB,MAAhB;AACd,cAAc,gBAAM,SAAN,CAAgB,IAAhB;AACd,aAAc,gBAAM,SAAN,CAAgB,IAAhB;AACd,UAAc,gBAAM,SAAN,CAAgB,IAAhB;AACd,WAAc,gBAAM,SAAN,CAAgB,MAAhB;;kBAiEP","file":"input.js","sourcesContent":["import React, { Component } from \"react\"\nimport { findDOMNode } from \"react-dom\"\nimport classNames from \"classnames\"\nimport moment from \"moment\"\nimport { MODE_TIME } from \"../config.js\"\n\nclass DateTimePickerInput extends Component {\n\n    static propTypes = {\n        bsSize      : React.PropTypes.string,\n        focusOnShow : React.PropTypes.bool,\n        icon        : React.PropTypes.bool,\n        icons       : React.PropTypes.object,\n        inputProps  : React.PropTypes.object,\n        mode        : React.PropTypes.string,\n        onChange    : React.PropTypes.func,\n        onClick     : React.PropTypes.func,\n        show        : React.PropTypes.bool,\n        value       : React.PropTypes.string\n    };\n\n    componentDidUpdate () {\n        const {\n            focusOnShow,\n            show\n        } = this.props\n        const input = findDOMNode(this.refs.input)\n\n        if (show && focusOnShow && input) {\n            input.focus()\n        }\n    }\n\n    onChangeInput = (e) => {\n        e.preventDefault()\n\n        const { onChange } = this.props\n        const value = e.target.value\n        const dateTime = moment(value)\n        if (dateTime.isValid()) {\n            onChange(dateTime)\n        }\n    };\n\n    render () {\n        const {\n            bsSize,\n            icons,\n            inputProps,\n            mode,\n            onClick,\n            value\n        } = this.props\n\n        const classes = classNames(\n            \"input-group\",\n            \"date\",\n            {\n                [`input-group-${bsSize}`] : bsSize\n            }\n        )\n\n        const iconClasses = mode === MODE_TIME ? icons.time : icons.date\n\n        return (\n            <div className={ classes }>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       ref=\"input\"\n                       value={ value }\n                       onChange={ this.onChangeInput }\n                       { ...inputProps } />\n\n                <span className=\"input-group-addon\"\n                      onClick={ onClick }>\n                    <span className={ iconClasses } />\n                </span>\n            </div>\n        )\n    }\n\n}\n\nexport default DateTimePickerInput\n"]}