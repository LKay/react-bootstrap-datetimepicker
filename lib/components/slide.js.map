{"version":3,"sources":["../../src/components/slide.js"],"names":[],"mappings":"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","file":"slide.js","sourcesContent":["import React, { Component, cloneElement } from \"react\"\nimport { findDOMNode } from \"react-dom\"\nimport { Transition } from \"react-overlays\"\n\nconst TRANSITION_DURATION = 200\nconst TRANSITION_FRAME_DELAY = 5\nconst TRANSITION_HALF = 0.5\n\nclass DateTimePickerViewSlide extends Component {\n\n    static propTypes = {\n        children : React.PropTypes.element.isRequired,\n        collapse : React.PropTypes.bool,\n        in       : React.PropTypes.bool\n    }\n\n    easeDelta (progress) {\n        return (progress < TRANSITION_HALF) ? (2 * progress / 2) : ((2 - 2 * (1 - progress)) / 2)\n    }\n\n    transition = (slide, step) => {\n        const start = new Date()\n        slide.style.overflow = \"hidden\"\n        const timer = setInterval(() => {\n            const timePassed = new Date() - start\n            const progress = Math.min(1, timePassed / TRANSITION_DURATION)\n\n            const delta = this.easeDelta(progress)\n\n            step(delta)\n\n            if (progress === 1) {\n                clearInterval(timer)\n                slide.style.removeProperty(\"height\")\n                slide.style.removeProperty(\"overflow\")\n            }\n        }, TRANSITION_FRAME_DELAY)\n    }\n\n    slideToggle (slide, from, to) {\n        slide.style.height = `${from}px`\n\n        this.transition(slide, (delta) => {\n            let height\n            if (from > to) {\n                height = from - from * delta\n            } else {\n                height = to * delta\n            }\n            slide.style.height = `${height}px`\n        })\n    }\n\n    onEntering = () => {\n        const slide = findDOMNode(this.refs.slide)\n        const parent = slide.parentNode\n        const clone = slide.cloneNode(true)\n        clone.style.display = \"block\"\n        parent.appendChild(clone)\n        const height = clone.getBoundingClientRect().height\n        parent.removeChild(clone)\n        this.slideToggle(slide, 0, height)\n    }\n\n    onExiting = () => {\n        const slide = findDOMNode(this.refs.slide)\n        const height = slide.getBoundingClientRect().height\n        this.slideToggle(slide, height, 0)\n    }\n\n    renderWithCollapse () {\n        const { children } = this.props\n\n        return (\n            <Transition ref=\"slide\"\n                        in={ this.props.in }\n                        timeout={ TRANSITION_DURATION }\n                        onEntering={ this.onEntering }\n                        onExiting={ this.onExiting }\n                        enteredClassName=\"collapse in\"\n                        exitedClassName=\"collapse\">\n                { children }\n            </Transition>\n        )\n    }\n\n    renderWithoutCollapse () {\n        const { children } = this.props\n        const child = React.Children.only(children)\n        const styles = { display : \"none\" }\n\n        return cloneElement(child, Object.assign({}, child.props, {\n            style : Object.assign({}, child.props.style, !this.props.in ? styles : {})\n        }))\n    }\n\n    render () {\n        const { collapse } = this.props\n        return collapse ? this.renderWithCollapse() : this.renderWithoutCollapse()\n    }\n\n}\n\nexport default DateTimePickerViewSlide\n"]}