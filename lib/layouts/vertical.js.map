{"version":3,"sources":["../../src/layouts/vertical.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAQM;;;;;;;;;;;;;;8NASF,QAAQ;AACJ,mCADI;iBAgCR,gBAAgB,UAAC,CAAD,EAAO;AACnB,cAAE,cAAF,GADmB;;gBAGX,OAAS,MAAK,KAAL,CAAT,KAHW;;;AAKnB,kBAAK,QAAL,CAAc;AACV,sBAAO,kEAAP;aADJ,EALmB;SAAP;;;iBAzCd;;gDAauB;gBACb,OAAS,KAAK,KAAL,CAAT,KADa;;;AAGrB,mBACI;;kBAAI,WAAU,eAAV,EAAJ;gBACI,8DAAsB,KAAK,KAAL;AACL,mCAAgB,KAAK,aAAL;AAChB,0BAAO,IAAP,GAFjB,CADJ;aADJ,CAHqB;;;;qCAYX,UAAU;yBAIhB,KAAK,KAAL,CAJgB;gBAEhB,+BAFgB;gBAGhB,+BAHgB;gBAKZ,OAAS,KAAK,KAAL,CAAT,KALY;;AAMpB,gBAAM,SAAS,iCAAyB,UAAzB,GAAsC,UAAtC,CANK;;AAQpB,mBACI;;6BAAwB,KAAK,KAAL;AACL,0BAAK,aAAa,IAAb,GADxB;gBAEI;;;oBAAM,MAAN;iBAFJ;aADJ,CARoB;;;;iCA0Bd;gBACE,mBAAqB,KAAK,KAAL,CAArB,iBADF;;;AAGN,mBACI;;kBAAI,WAAU,eAAV,EAAJ;gBACM,8CAAsC,KAAK,qBAAL,EAAtC;gBACA,KAAK,YAAL,mBAFN;gBAGM,kDAA0C,KAAK,qBAAL,EAA1C;gBACA,KAAK,YAAL,mBAJN;gBAKM,iDAAyC,KAAK,qBAAL,EAAzC;aANV,CAHM;;;;WAnDR;;;6BAEK,YAAY;AACf,gBAAmB,gBAAM,SAAN,CAAgB,IAAhB;AACnB,WAAmB,gBAAM,SAAN,CAAgB,MAAhB;AACnB,gBAAmB,gBAAM,SAAN,CAAgB,IAAhB;AACnB,sBAAmB,gBAAM,SAAN,CAAgB,MAAhB;;kBA6DZ","file":"vertical.js","sourcesContent":["import React, { Component } from \"react\"\nimport DateTimeToolbar from \"../components/toolbar.js\"\nimport DateTimeViewSlide from \"../components/slide.js\"\nimport {\n    VIEW_TIME,\n    VIEW_DATE,\n    PLACEMENT_DEFAULT,\n    PLACEMENT_TOP,\n    PLACEMENT_BOTTOM\n} from \"../config.js\"\n\nclass DateTimePickerLayoutVertical extends Component {\n\n    static propTypes = {\n        datePicker       : React.PropTypes.node,\n        icons            : React.PropTypes.object,\n        timePicker       : React.PropTypes.node,\n        toolbarPlacement : React.PropTypes.string\n    }\n\n    state = {\n        view : VIEW_DATE\n    }\n\n    renderDateTimeToolbar () {\n        const { view } = this.state\n\n        return (\n            <li className=\"picker-switch\">\n                <DateTimeToolbar { ...this.props }\n                                 onClickSwitch={ this.onClickSwitch }\n                                 view={ view } />\n            </li>\n        )\n    }\n\n    renderPicker (viewType) {\n        const {\n            datePicker,\n            timePicker\n        } = this.props\n        const { view } = this.state\n        const picker = viewType === VIEW_TIME ? timePicker : datePicker\n\n        return (\n            <DateTimeViewSlide { ...this.props }\n                               in={ viewType === view }>\n                <li>{ picker }</li>\n            </DateTimeViewSlide>\n        )\n    }\n\n    onClickSwitch = (e) => {\n        e.preventDefault()\n\n        const { view } = this.state\n\n        this.setState({\n            view : view === VIEW_DATE ? VIEW_TIME : VIEW_DATE\n        })\n    }\n\n    render () {\n        const { toolbarPlacement } = this.props\n\n        return (\n            <ul className=\"list-unstyled\">\n                { toolbarPlacement === PLACEMENT_TOP && this.renderDateTimeToolbar() }\n                { this.renderPicker(VIEW_DATE) }\n                { toolbarPlacement === PLACEMENT_DEFAULT && this.renderDateTimeToolbar() }\n                { this.renderPicker(VIEW_TIME) }\n                { toolbarPlacement === PLACEMENT_BOTTOM && this.renderDateTimeToolbar() }\n            </ul>\n        )\n    }\n\n}\n\nexport default DateTimePickerLayoutVertical\n"]}